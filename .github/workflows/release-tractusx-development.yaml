#/********************************************************************************
# * Copyright (c) 2022 Mercedes-Benz Tech Innovation GmbH
# * Copyright (c) 2022 Contributors to the Eclipse Foundation
# *
# * See the NOTICE file(s) distributed with this work for additional
# * information regarding copyright ownership.
# *
# * This program and the accompanying materials are made available under the
# * terms of the Apache License, Version 2.0 which is available at
# * https://www.apache.org/licenses/LICENSE-2.0.
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# * License for the specific language governing permissions and limitations
# * under the License.
# *
# * SPDX-License-Identifier: Apache-2.0
# ********************************************************************************/
name: Collect tractusx development helm resources 
on:
  workflow_dispatch:

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.1
      
      - name: Install yq
        run:
          sudo apt-get update && sudo apt-get install yq
      
      - name: collect helm resources
        id: collectHelm
        run: |
          pwd

          WORK_DIR="charts/tractusx-development"

          if [ ! -d $WORK_DIR/charts ]
          then
              mkdir $WORK_DIR/charts
          fi 

          for product_index_file in $(cat $WORK_DIR/product-chart-index.yaml | yq '.product-charts[].url')
          do  
              echo "getting product chart index file at: $product_index_file"
              curl -L -o $WORK_DIR/act-product.yaml $product_index_file

              for chart in $(cat $WORK_DIR/act-product.yaml | yq ".entries | keys" | sed 's/- //g')
              do 
                  echo "processing chart: $chart"
                  if [ ! -d $WORK_DIR/charts/$chart ]
                  then
                      mkdir $WORK_DIR/charts/$chart
                  fi 

                  for url in $(cat $WORK_DIR/act-product.yaml | yq ".entries.$chart[].urls[]")
                  do
                      echo "processing $url"

                      filename=$(basename $url)
                      if [ ! -f $WORK_DIR/charts/$chart/$filename ]
                      then
                          echo "getting file: $filename"
                          curl -L -o $WORK_DIR/charts/$chart/$filename $url
                      fi
                  done 
              done
          done

          rm $WORK_DIR/act-product.yaml

          #add if needed --url string
          helm repo index --merge $WORK_DIR/charts/index.yaml charts

      
#      - name: push index file        
#        run: | 
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add .
#          git commit -m "build: ${{ steps.index.outputs.chart_version }}"          
#          git push
#          git add -A
#          if ! git diff --cached --exit-code; then
#            echo "Changes have been detected, update index file"
#            git commit -m "build: "
#            git log --graph --abbrev-commit --date=relative -n 5
#            git push origin HEAD:${BRANCH_NAME}
#          else
#            echo "No changes have been detected since last build, nothing to publish"
#          fi
          
#      - name: Run chart-releaser
#        uses: helm/chart-releaser-action@v1.4.0
#        env:
#          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
